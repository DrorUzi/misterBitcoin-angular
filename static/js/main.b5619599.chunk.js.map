{"version":3,"sources":["services/BitcoinService.js","stores/bitCoin/actions.js","services/UserService.js","stores/user/actions.js","components/MoveList.js","pages/HomePage.js","components/ContactPreview.js","components/ContactList.js","services/ContactService.js","stores/contacts/actions.js","pages/ContactPage.js","pages/StatisticPage.js","components/MainHeader.js","pages/ContactDetailsPage.js","pages/ContactEditPage.js","App.js","serviceWorker.js","stores/bitCoin/reducers.js","stores/contacts/reducers.js","stores/user/reducers.js","stores/store.js","index.js","assets/coins.png","assets/bitcoin.png","assets/moves.png"],"names":["getRate","a","async","axios","get","rate","data","getMarketPrice","priceChart","getConfirmedTransactions","transChart","setRate","type","setMarketPrice","marketPrice","setTransactions","transactions","getUser","user","JSON","parse","localStorage","getItem","name","coins","moves","setItem","stringify","addMove","contact","amount","unshift","to","id","_id","at","Date","now","Promise","resolve","setCurrUser","loadCurrUser","dispatch","UserService","setMove","MoveList","props","console","log","className","length","map","move","key","toLocaleString","src","moveImg","alt","HomePage","this","loadRate","currUser","coinsImg","bitcoin","React","Component","mapDispatchToProps","BitcoinService","connect","state","bitCoin","ContactPreview","ContactList","contacts","getContacts","filterBy","reject","contactsToReturn","term","currContacts","toLocaleLowerCase","storageContacts","filter","includes","phone","email","sort","b","getContactById","find","deleteContact","index","findIndex","splice","saveContact","c","_updateContact","txt","possible","i","charAt","Math","floor","random","_makeId","push","_addContact","getEmptyContact","getImgUrl","num","Axios","url","config","setCurrContact","loadCurrContact","ContactService","setContacts","saveNewContact","ContactPage","loadContacts","value","placeholder","onChange","ev","handleFilter","target","StatisticPage","priceData","transData","labels","datasets","label","backgroundColor","loadMarketPrice","loadTransactions","values","setState","MainHeader","ContactDetailsPage","handleMove","match","params","htmlFor","onClick","currContact","ContactEditPage","preventDefault","history","updateContact","field","prevState","onSubmit","newContact","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","INITIAL_STATE","rootReducer","combineReducers","action","idx","store","createStore","applyMiddleware","thunk","createBrowserHistory","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"+SAEe,GACXA,QAeJ,0BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACsBE,IAAMC,IAAN,iEADtB,cACSC,EADT,yBAEUA,EAAKC,MAFf,sCAdIC,eAIJ,0BAAAN,EAAAC,OAAA,kEAAAD,EAAA,MAE6BE,IAAMC,IAAI,2FAFvC,cAEUI,EAFV,yBAGWA,EAAWF,MAHtB,sCAHIG,yBASJ,0BAAAR,EAAAC,OAAA,kEAAAD,EAAA,MAC6BE,IAAMC,IAAI,uGADvC,cACUM,EADV,yBAEWA,GAFX,uCCXA,IAAMC,EAAU,SAACN,GACb,MAAO,CAACO,KAAK,WAAYP,SAUvBQ,EAAiB,SAACC,GACpB,MAAO,CAACF,KAAM,mBAAoBE,gBAShCC,EAAiB,SAACC,GACpB,MAAO,CAACJ,KAAO,mBAAmBI,iBCxBvB,GACXC,QAMJ,WAEI,GADIC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SACjC,OAAOJ,EAEb,IAAIA,EAAQ,CACRK,KAAM,WACNC,MAAO,IACPC,MAAO,IAEXJ,aAAaK,QAAQ,OAAOP,KAAKQ,UAAUT,KAd/CU,QAkBJ,SAAiBC,EAASC,GACtB,IAAIZ,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAC3C,GAAGJ,EAWC,OAVAA,EAAKM,OAASM,EACdZ,EAAKO,MAAMM,QAAQ,CACfC,GAAI,CACAC,GAAIJ,EAAQK,IACZX,KAAMM,EAAQN,MAElBY,GAAIC,KAAKC,MACTP,WAEJT,aAAaK,QAAQ,OAAOP,KAAKQ,UAAWT,IACrCoB,QAAQC,QAAQrB,KChC/B,IAAMsB,EAAc,SAACtB,GACjB,MAAO,CAACN,KAAM,gBAAiBM,SAGtBuB,EAAe,WACxB,OAAO,SAAOC,GAAP,eAAAzC,EAAAC,OAAA,kEAAAD,EAAA,MACgB0C,EAAY1B,WAD5B,cACGC,EADH,yBAEIwB,EAASF,EAAYtB,KAFzB,uCAOL0B,EAAU,SAAC1B,GACb,MAAO,CAACN,KAAM,WAAYM,S,iBCXf,SAAS2B,EAASC,GAC7B,IAAM5B,EAAO4B,EAAM5B,KAEnB,OADA6B,QAAQC,IAAI9B,GACJ,oCACJ,yBAAK+B,UAAU,wBACT/B,EAAKO,MAAMyB,QAAU,gDAEtBhC,EAAKO,MAAMyB,QAAU,yBAAKD,UAAU,SACjC,8CACC/B,EAAKO,MAAM0B,KAAI,SAAAC,GAAI,OAAI,yBAAKH,UAAU,QAAQI,IAAKD,EAAKjB,IACrD,kCAAQiB,EAAKpB,GAAGT,MAChB,sCAAa6B,EAAKtB,QAClB,uCAAY,0CACZ,4BAAK,IAAIM,KAAKgB,EAAKjB,IAAImB,uBAI3B,yBAAKC,IAAKC,IAASC,IAAI,O,ICZjCC,E,wRAEQC,KAAKb,MAAML,gB,OACjBkB,KAAKb,MAAMc,W,gFAEL,IAAD,EACqBD,KAAKb,MAAvBe,EADH,EACGA,SAASxD,EADZ,EACYA,KACjB,OAAO,oCACP,yBAAK4C,UAAU,QACX,yBAAKA,UAAU,YACX,4BAAI,qCAAJ,eAAgC,6BAAhC,OAA0C,+CAG7CY,GAAY,6BAASZ,UAAU,qBAChC,uCAAaY,EAAStC,KAAtB,KACA,yBAAK0B,UAAU,kBACX,yBAAKA,UAAU,aACX,yBAAKM,IAAKO,IAAUL,IAAI,KACxB,qCACA,4BAAKI,EAASrC,QAElB,yBAAKyB,UAAU,aACX,yBAAKM,IAAKQ,IAASN,IAAI,KACvB,mCACA,4BAAKpD,KAGb,kBAACwC,EAAD,CAAU3B,KAAM2C,U,GA3BLG,IAAMC,WA0CvBC,EAAqB,CACvBN,SJ7CoB,WACpB,OAAO,SAAOlB,GAAP,eAAAzC,EAAAC,OAAA,kEAAAD,EAAA,MACgBkE,EAAenE,WAD/B,cACGK,EADH,yBAEIqC,EAAS/B,EAAQN,KAFrB,uCI6CPoC,gBAGW2B,eAZS,SAACC,GACrB,MAAO,CACHR,SAAWQ,EAAMnD,KAAK2C,SACtBxD,KAAOgE,EAAMC,QAAQjE,QAWzB6D,EAFWE,CAGbV,G,QCxDWa,EAAb,iLAEc,IACE1C,EAAY8B,KAAKb,MAAjBjB,QACR,OACIA,GAAW,yBAAKoB,UAAU,mBACtB,6BACA,yBAAKM,IAAG,+BAA0B1B,EAAQK,IAAlC,aAAkDuB,IAAI,aAE9D,4BAAK5B,EAAQN,WAT7B,GAAoCyC,IAAMC,WCE7BO,EAAb,iLACc,IACEC,EAAad,KAAKb,MAAlB2B,SACR,OACIA,GAAY,6BAASxB,UAAU,iBAGvBwB,EAAStB,KAAI,SAAAtB,GAAO,OAAI,kBAAC,IAAD,CAAMG,GAAE,mBAAcH,EAAQK,KAAOmB,IAAKxB,EAAQK,KAAK,kBAAC,EAAD,CAAiBL,QAASA,aAP7H,GAAiCmC,IAAMC,WCHxB,GACXS,YAsJJ,WAAuC,IAAlBC,EAAiB,uDAAN,KAC5B,OAAO,IAAIrC,SAAQ,SAACC,EAASqC,GACzB,IAAIC,EAAmBJ,EACnBE,GAAYA,EAASG,OACrBD,EAsDZ,SAAgBC,GAEZ,IAAIC,EADJD,EAAOA,EAAKE,oBAEZ,IAAMC,EAAkB9D,KAAKC,MAAMC,aAAaC,QAAQ,aACpCyD,EAAjBE,GACiBR,EACpB,OAAOM,EAAaG,QAAO,SAAArD,GACvB,OAAOA,EAAQN,KAAKyD,oBAAoBG,SAASL,IAC7CjD,EAAQuD,MAAMJ,oBAAoBG,SAASL,IAC3CjD,EAAQwD,MAAML,oBAAoBG,SAASL,MA/DxBI,CAAOP,EAASG,OAEvCvC,EAAasC,EAvBNS,MAAK,SAACrF,EAAGsF,GAChB,OAAItF,EAAEsB,KAAKyD,oBAAsBO,EAAEhE,KAAKyD,qBAC5B,EAER/E,EAAEsB,KAAKyD,oBAAsBO,EAAEhE,KAAKyD,oBAC7B,EAGJ,UA5IXQ,eA+JJ,SAAwBvD,GACpB,OAAO,IAAIK,SAAQ,SAACC,EAASqC,GACzB,IAAM/C,EAAU4C,EAASgB,MAAK,SAAA5D,GAAO,OAAIA,EAAQK,MAAQD,KACzDJ,EAAUU,EAAQV,GAAW+C,EAAO,cAAD,OAAe3C,EAAf,oBAjKvCyD,cAqKJ,SAAuBzD,GACnB,OAAO,IAAIK,SAAQ,SAACC,EAASqC,GACzB,IAAMe,EAAQlB,EAASmB,WAAU,SAAA/D,GAAO,OAAIA,EAAQK,MAAQD,MAC7C,IAAX0D,GACAlB,EAASoB,OAAOF,EAAO,GAE3BpD,EAAQkC,OA1KZqB,YAiMJ,SAAqBjE,GACjB,OAAOA,EAAQK,IApBnB,SAAwBL,GACpB,OAAO,IAAIS,SAAQ,SAACC,EAASqC,GACzB,IAAMe,EAAQlB,EAASmB,WAAU,SAAAG,GAAC,OAAIlE,EAAQK,MAAQ6D,EAAE7D,QACzC,IAAXyD,IACAlB,EAASkB,GAAS9D,GAEtBU,EAAQV,MAcSmE,CAAenE,GAVxC,SAAqBA,GACjB,OAAO,IAAIS,SAAQ,SAACC,EAASqC,GACzB/C,EAAQK,IAkChB,WAGI,IAH2B,IAAdgB,EAAa,uDAAJ,GAClB+C,EAAM,GACNC,EAAW,iEACNC,EAAI,EAAGA,EAAIjD,EAAQiD,IACxBF,GAAOC,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAAShD,SAE/D,OAAO+C,EAxCWO,GACd/B,EAASgC,KAAK5E,GACdU,EAAQV,MAMmC6E,CAAY7E,IAjM3D8E,gBAoMJ,WACI,MAAO,CACHpF,KAAM,GACN8D,MAAO,GACPD,MAAO,KAvMXwB,UA4IJ,4BAAA3G,EAAAC,OAAA,uDACU2G,EAAMR,KAAKE,SADrB,WAAAtG,EAAA,MAEqB6G,IAAM1G,IAAN,+BAAkCyG,EAAlC,eAFrB,cAEQE,EAFR,yBAGSA,EAAIC,OAAOD,KAHpB,uCAvIMtC,EAAW,CACb,CACI,IAAO,2BACP,KAAQ,aACR,MAAS,yBACT,MAAS,qBAEb,CACI,IAAO,2BACP,KAAQ,gBACR,MAAS,4BACT,MAAS,qBAEb,CACI,IAAO,2BACP,KAAQ,iBACR,MAAS,6BACT,MAAS,qBAEb,CACI,IAAO,2BACP,KAAQ,cACR,MAAS,0BACT,MAAS,qBAEb,CACI,IAAO,2BACP,KAAQ,iBACR,MAAS,6BACT,MAAS,qBAEb,CACI,IAAO,2BACP,KAAQ,aACR,MAAS,yBACT,MAAS,qBAEb,CACI,IAAO,2BACP,KAAQ,kBACR,MAAS,8BACT,MAAS,qBAEb,CACI,IAAO,2BACP,KAAQ,cACR,MAAS,0BACT,MAAS,qBAEb,CACI,IAAO,2BACP,KAAQ,kBACR,MAAS,8BACT,MAAS,qBAEb,CACI,IAAO,2BACP,KAAQ,eACR,MAAS,2BACT,MAAS,qBAEb,CACI,IAAO,2BACP,KAAQ,YACR,MAAS,wBACT,MAAS,qBAEb,CACI,IAAO,2BACP,KAAQ,kBACR,MAAS,8BACT,MAAS,qBAEb,CACI,IAAO,2BACP,KAAQ,eACR,MAAS,2BACT,MAAS,qBAEb,CACI,IAAO,2BACP,KAAQ,iBACR,MAAS,6BACT,MAAS,qBAEb,CACI,IAAO,2BACP,KAAQ,eACR,MAAS,2BACT,MAAS,qBAEb,CACI,IAAO,2BACP,KAAQ,iBACR,MAAS,6BACT,MAAS,qBAEb,CACI,IAAO,2BACP,KAAQ,cACR,MAAS,0BACT,MAAS,qBAEb,CACI,IAAO,2BACP,KAAQ,eACR,MAAS,2BACT,MAAS,qBAEb,CACI,IAAO,2BACP,KAAQ,eACR,MAAS,2BACT,MAAS,sBC5HjB,IAAMwC,EAAiB,SAACpF,GACpB,MAAO,CAACjB,KAAM,mBAAoBiB,YAEzBqF,EAAkB,SAACjF,GAC5B,OAAO,SAAOS,GAAP,eAAAzC,EAAAC,OAAA,kEAAAD,EAAA,MACmBkH,EAAe3B,eAAevD,IADjD,cACGJ,EADH,yBAEIa,EAASuE,EAAepF,KAF5B,uCAMLuF,EAAc,SAAC3C,GACjB,MAAO,CAAC7D,KAAM,eAAgB6D,aAU5B4C,EAAiB,SAACxF,GACpB,MAAO,CAACjB,KAAM,eAAgBiB,YChB5ByF,E,8PAEE3D,KAAKb,MAAMyE,e,oFAEIC,G,wEACX7C,EAAW,CACXG,KAAM0C,GAEV7D,KAAKb,MAAMyE,aAAa5C,G,gFAIlB,IAAD,OACGF,EAAad,KAAKb,MAAlB2B,SACR,OAAQ,oCAEHA,GAAY,6BAASxB,UAAU,kBAC5B,wBAAIA,UAAU,eAAd,gBACA,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAAMA,UAAU,UAAUjB,GAAI,iBAA9B,eACA,2BAAOiB,UAAU,eAAewE,YAAY,8BAA2B7G,KAAK,OAAO8G,SAAU,SAACC,GAAD,OAAQ,EAAKC,aAAaD,EAAGE,OAAOL,WAErI,kBAAC,EAAD,CAAa/C,SAAUA,U,GAtBbT,IAAMC,WAoC1BC,EAAqB,CACvBqD,aD7BwB,SAAC5C,GACzB,OAAO,SAAOjC,GAAP,eAAAzC,EAAAC,OAAA,kEAAAD,EAAA,MACoBkH,EAAezC,YAAYC,IAD/C,cACGF,EADH,yBAEI/B,EAAS0E,EAAY3C,KAFzB,wCC+BIL,eAVS,SAACC,GACrB,MAAO,CACHI,SAAUJ,EAAMxC,QAAQ4C,YAU5BP,EAFWE,CAGbkD,G,QC5CIQ,E,2MACFzD,MAAQ,CACJ0D,UAAW,KACXC,UAAW,M,EAEfxH,WAAa,CACTyH,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtFC,SAAU,CACN,CACIC,MAAO,GACPC,gBAAiB,uBACjB9H,KAAM,M,EAIlBI,WAAa,CACTuH,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtFC,SAAU,CACN,CACIC,MAAO,GACPC,gBAAiB,6BACjB9H,KAAM,M,uLAKRqD,KAAKb,MAAMuF,mB,iCACX1E,KAAKb,MAAMwF,oB,OACbN,EAAYrE,KAAKb,MAAM9B,aAAauH,OAAOpF,KAAI,SAAAqE,GAAK,OAAIA,KAC5D7D,KAAKjD,WAAWwH,SAAS,GAAG5H,KAAO0H,EAC/BD,EAAYpE,KAAKb,MAAMhC,YAAYyH,OAAOpF,KAAI,SAAAqE,GAAK,OAAIA,KAC3D7D,KAAKnD,WAAW0H,SAAS,GAAG5H,KAAOyH,EACnCpE,KAAKnD,WAAW0H,SAAS,GAAGC,MAAQxE,KAAKb,MAAMhC,YAAYS,KAC3DoC,KAAKjD,WAAWwH,SAAS,GAAGC,MAAQxE,KAAKb,MAAM9B,aAAaO,KAC5DoC,KAAK6E,SAAS,CAAET,YAAWC,c,iFAGrB,IAAD,EACiCrE,KAAKb,MAAnChC,EADH,EACGA,YAAaE,EADhB,EACgBA,aACrB,OAAQ,6BAASiC,UAAU,kBACtBnC,GACG,kBAAC,IAAD,CAAMR,KAAMqD,KAAKnD,aAEpBQ,GACG,kBAAC,IAAD,CAAMV,KAAMqD,KAAKjD,kB,GA5CLsD,IAAMC,WA4D5BC,EAAqB,CACvBoE,iBVxC4B,WAC5B,OAAO,SAAO5F,GAAP,eAAAzC,EAAAC,OAAA,kEAAAD,EAAA,MACwBkE,EAAe1D,4BADvC,cACGO,EADH,yBAEI0B,EAAS3B,EAAgBC,KAF7B,uCUwCPqH,gBVpD2B,WAC3B,OAAO,SAAO3F,GAAP,eAAAzC,EAAAC,OAAA,kEAAAD,EAAA,MACuBkE,EAAe5D,kBADtC,cACGO,EADH,yBAEI4B,EAAS7B,EAAeC,KAF5B,wCUsDIsD,eAZS,SAACC,GACrB,MAAO,CACHvD,YAAauD,EAAMC,QAAQxD,YAC3BE,aAAcqD,EAAMC,QAAQxD,eAWhCoD,EAFWE,CAGb0D,G,QCvEa,SAASW,EAAW3F,GAC/B,OAAO,yBAAKG,UAAU,eAClB,wBAAIA,UAAU,QAAd,iBACA,yBAAKA,UAAU,SACf,kBAAC,IAAD,CAAMjB,GAAE,KAAR,QACA,kBAAC,IAAD,CAAMA,GAAE,YAAR,YACA,kBAAC,IAAD,CAAMA,GAAE,cAAR,e,ICHF0G,E,2MACFrE,MAAQ,CACJvC,OAAQ,I,EAMZ6G,WAAa,SAAChB,GACV,IAAM7F,EAAS6F,EAAGE,OAAOL,MACzB,EAAKgB,SAAS,CAAE1G,Y,EAEpBF,QAAU,oBAAA3B,EAAAC,OAAA,kEAAAD,EAAA,MACA,EAAK6C,MAAML,gBADX,yBAAAxC,EAAA,MAEA,EAAK6C,MAAMlB,QAAQ,EAAKkB,MAAMjB,SAAU,EAAKwC,MAAMvC,SAFnD,sC,2JAPEG,EAAO0B,KAAKb,MAAM8F,MAAMC,OAAxB5G,GACR0B,KAAKb,MAAMoE,gBAAgBjF,G,gFAUrB,IACEJ,EAAY8B,KAAKb,MAAjBjB,QACR,OACIA,GAAW,6BAASoB,UAAU,mBAC1B,yBAAKM,IAAG,+BAA0B1B,EAAQK,IAAlC,aAAkDuB,IAAI,YAC9D,qCAAW5B,EAAQN,MACnB,sCAAYM,EAAQuD,OACpB,sCAAYvD,EAAQwD,OACpB,kBAAC,IAAD,CAAMrD,GAAE,wBAAmBH,EAAQK,MAAnC,gBACA,6BACA,yBAAKe,UAAU,wBACX,yBAAKM,IAAI,sIAAsIE,IAAI,KACnJ,yBAAKR,UAAU,cACnB,2BAAO6F,QAAQ,UAAf,QAA6B,8BAAOjH,EAAQN,MAA5C,gBACA,2BAAOU,GAAG,SAASwF,YAAY,SAASC,SAAU/D,KAAKgF,WAAY/H,KAAK,SACxE,4BAAQmI,QAASpF,KAAK/B,SAAtB,e,GA/BiBoC,IAAMC,WA+CjCC,GAAqB,CACvBgD,kBACAtF,QVvCmB,SAACC,EAAQC,GAC5B,OAAO,SAAOY,GAAP,eAAAzC,EAAAC,OAAA,kEAAAD,EAAA,MACgB0C,EAAYf,QAAQC,EAAQC,IAD5C,cACGZ,EADH,OAEH6B,QAAQC,IAAI9B,EAAK,aAFd,kBAGIwB,EAASE,EAAQ1B,KAHrB,uCUuCPuB,gBAIW2B,gBAdS,SAACC,GACrB,MAAO,CACHxC,QAASwC,EAAMxC,QAAQmH,YACvBnF,SAAUQ,EAAMxC,QAAQgC,YAa5BK,GAFWE,CAGbsE,G,kBC3DIO,G,2MACF5E,MAAQ,CACJxC,QAAS,CACLN,KAAM,GACN8D,MAAO,GACPD,MAAO,K,EAWfU,YAAc,SAAO6B,GAAP,SAAA1H,EAAAC,OAAA,uDACVyH,EAAGuB,iBADO,WAAAjJ,EAAA,MAEJ,EAAK6C,MAAMgD,YAAY,EAAKzB,MAAMxC,UAF9B,OAGV,EAAKiB,MAAMqG,QAAQ1C,KAAK,YAHd,sC,EAMd2C,cAAgB,SAACzB,EAAI0B,GAAW,IACpB7B,EAAUG,EAAGE,OAAbL,MACR,EAAKgB,UAAS,SAAAc,GACV,MAAO,CACHzH,QAAQ,gBACDyH,EAAUzH,QADV,gBAEFwH,EAAQ7B,S,kKAnBbvF,EAAO0B,KAAKb,MAAM8F,MAAMC,OAAxB5G,I,0CAEF0B,KAAKb,MAAMoE,gBAAgBjF,I,OAC1BJ,EAAW8B,KAAKb,MAAhBjB,QACN8B,KAAK6E,SAAS,CAAC3G,Y,gFAqBV,IAAD,OACGA,EAAY8B,KAAKU,MAAjBxC,QACR,OAAQ,oCACJA,GAAW,6BAASoB,UAAU,0BAC7BpB,EAAQK,KAAO,kDACdL,EAAQK,KAAO,2CACb,0BAAMqH,SAAU5F,KAAKmC,aACjB,wCACA,2BAAO0B,MAAO3F,EAAQN,KAAMmG,SAAU,SAACC,GAAD,OAAQ,EAAKyB,cAAczB,EAAI,SAAS/G,KAAK,UAEnF,yCACA,2BAAO4G,MAAO3F,EAAQuD,MAAOsC,SAAU,SAACC,GAAD,OAAQ,EAAKyB,cAAczB,EAAI,UAAU/G,KAAK,UAErF,yCACA,2BAAO4G,MAAO3F,EAAQwD,MAAOqC,SAAU,SAACC,GAAD,OAAQ,EAAKyB,cAAczB,EAAG,UAAU/G,KAAK,WAEpF,uD,GAlDUoD,IAAMC,WAqE9BC,GAAqB,CACvBgD,kBACApB,YLlDuB,SAACjE,GACxB,OAAO,SAAOa,GAAP,eAAAzC,EAAAC,OAAA,kEAAAD,EAAA,MACsBkH,EAAerB,YAAYjE,IADjD,cACG2H,EADH,yBAEI9G,EAAS2E,EAAemC,KAF5B,wCKoDIpF,gBAXS,SAACC,GACrB,MAAO,CACHxC,QAAUwC,EAAMxC,QAAQmH,eAW5B9E,GAFWE,CAGb6E,ICnDaQ,G,iLAlBX,OACE,6BAASxG,UAAU,YACjB,kBAACwF,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,IAAIC,UAAWlG,IACjC,kBAAC,IAAD,CAAOgG,OAAK,EAACC,KAAK,YAAYC,UAAWtC,IACzC,kBAAC,IAAD,CAAOoC,OAAK,EAACC,KAAK,qBAAqBC,UAAWX,KAClD,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,eAAeC,UAAWlB,KAC5C,kBAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,aAAaC,UAAW9B,KAE5C,4BAAQ7E,UAAU,UAChB,wBAAIA,UAAU,QAAd,iBACA,kD,GAdQe,IAAMC,WCClB4F,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASrB,MACvB,2DAsCN,SAASsB,GAAgBC,EAAOnD,GAC9BoD,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBrG,QACf+F,UAAUC,cAAcQ,YAI1B9H,QAAQC,IACN,iHAKEgE,GAAUA,EAAO8D,UACnB9D,EAAO8D,SAASN,KAMlBzH,QAAQC,IAAI,sCAGRgE,GAAUA,EAAO+D,WACnB/D,EAAO+D,UAAUP,WAO5BQ,OAAM,SAAAC,GACLlI,QAAQkI,MAAM,4CAA6CA,M,sBChG3DC,GAAgB,CAClB7K,KAAM,KACNS,YAAa,KACbE,aAAa,M,aCHXkK,GAAgB,CAClBlC,YAAa,KACbvE,SAAU,ICFd,IAAMyG,GAAgB,CAClBrH,SAAU,MCKd,IAAMsH,GAAcC,aAAgB,CAChCvJ,QFFW,WAAyD,IAAhCwC,EAA+B,uDAAvB6G,GAAeG,EAAQ,uCACnE,OAAQA,EAAOzK,MACX,IAAK,mBACD,OAAO,gBACAyD,EADP,CAEI2E,YAAcqC,EAAOxJ,UAE7B,IAAK,eACD,OAAO,gBACAwC,EADP,CAEII,SAAW4G,EAAO5G,WAE1B,IAAK,gBACL,IAAM6G,EAAMjH,EAAMI,SAASmB,WAAU,SAAAoD,GAAW,OAAIA,EAAY9G,MAAQmJ,EAAOxJ,QAAQK,OACvF,OAAO,gBACAmC,EADP,CAEII,SAAQ,aACDJ,EAAMI,SAASoB,OAAOyF,EAAK,EAAGD,EAAOxJ,YAGhD,QACI,OAAOwC,IElBfnD,KDHW,WAAqD,IAAhCmD,EAA+B,uDAAvB6G,GAAeG,EAAQ,uCAC/D,OAAOA,EAAOzK,MACV,IAAK,gBAKL,IAAK,WACD,OAAO,gBACAyD,EADP,CAEIR,SAAWwH,EAAOnK,OAG1B,QACI,OAAOmD,ICVfC,QHHW,WAAsD,IAA9BD,EAA6B,uDAArB6G,GAAcG,EAAO,uCAChE,OAAQA,EAAOzK,MACX,IAAK,WACD,OAAO,gBACAyD,EADP,CAEIhE,KAAMgL,EAAOhL,OAErB,IAAK,mBACD,OAAO,gBACAgE,EADP,CAEIvD,YAAauK,EAAOvK,cAE5B,IAAK,mBACD,OAAO,gBACAuD,EADP,CAEIrD,aAAcqK,EAAOrK,eAE7B,QACA,OAAOqD,MGNAkH,GAJDC,aACVL,GACAM,aAAgBC,O,SCPdvC,GAAUwC,eAEhBC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,IACb,kBAAC,IAAD,CAAQpC,QAASA,IACb,kBAAC,GAAD,QAEK2C,SAASC,eAAe,SLMlC,SAAkB/E,GACvB,GAA6C,kBAAmBoD,UAAW,CAGzE,GADkB,IAAI4B,IAAIC,uBAAwBlC,OAAOC,SAASkC,MACpDC,SAAWpC,OAAOC,SAASmC,OAIvC,OAGFpC,OAAOqC,iBAAiB,QAAQ,WAC9B,IAAMjC,EAAK,UAAM8B,uBAAN,sBAEPpC,KAgEV,SAAiCM,EAAOnD,GAEtCqF,MAAMlC,EAAO,CACXmC,QAAS,CAAE,iBAAkB,YAE5B/B,MAAK,SAAAgC,GAEJ,IAAMC,EAAcD,EAASD,QAAQlM,IAAI,gBAEnB,MAApBmM,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CtC,UAAUC,cAAcsC,MAAMpC,MAAK,SAAAC,GACjCA,EAAaoC,aAAarC,MAAK,WAC7BR,OAAOC,SAAS6C,eAKpB3C,GAAgBC,EAAOnD,MAG1BgE,OAAM,WACLjI,QAAQC,IACN,oEAvFA8J,CAAwB3C,EAAOnD,GAI/BoD,UAAUC,cAAcsC,MAAMpC,MAAK,WACjCxH,QAAQC,IACN,iHAMJkH,GAAgBC,EAAOnD,OK7B/BqD,I,mBCrBA0C,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.b5619599.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default {\r\n    getRate,\r\n    getMarketPrice,\r\n    getConfirmedTransactions\r\n}\r\n\r\nasync function getMarketPrice(){\r\n\r\n    const priceChart = await axios.get('https://api.blockchain.info/charts/market-price?timespan=1months&format=json&cors=true')\r\n    return priceChart.data\r\n}\r\n\r\nasync function getConfirmedTransactions(){\r\n    const transChart = await axios.get('https://api.blockchain.info/charts/median-confirmation-time?timespan=1months&format=json&cors=true')\r\n    return transChart\r\n}\r\nasync function getRate(){\r\n   const rate = await axios.get(`https://blockchain.info/tobtc?currency=USD&value=1&cors=true`);\r\n   return rate.data;\r\n}","import BitcoinService from '../../services/BitcoinService'\r\n\r\n\r\nconst setRate = (rate) => {\r\n    return {type:'SET_RATE', rate}\r\n}\r\n\r\nexport const loadRate = () => {\r\n    return async (dispatch) => {\r\n        const rate = await BitcoinService.getRate()\r\n        return dispatch(setRate(rate))\r\n    }\r\n}\r\n\r\nconst setMarketPrice = (marketPrice) => {\r\n    return {type: 'SET_MARKET_PRICE', marketPrice}\r\n}\r\nexport const loadMarketPrice = () => {\r\n    return async (dispatch) => {\r\n        const marketPrice = await BitcoinService.getMarketPrice()\r\n        return dispatch(setMarketPrice(marketPrice))\r\n    }\r\n}\r\n\r\nconst setTransactions= (transactions) => {\r\n    return {type : 'SET_TRANSACTIONS',transactions}\r\n}\r\n\r\nexport const loadTransactions = () => {\r\n    return async (dispatch) => {\r\n        const transactions = await BitcoinService.getConfirmedTransactions()\r\n        return dispatch(setTransactions(transactions))\r\n    }\r\n}","\r\nexport default {\r\n    getUser,\r\n    addMove\r\n}\r\n\r\n\r\n\r\nfunction getUser() {\r\n    var user = JSON.parse(localStorage.getItem('user'))\r\n    if (user) return user\r\n    else {\r\n        var user =  {\r\n            name: \"Dror Uzi\",\r\n            coins: 100,\r\n            moves: []\r\n        }\r\n        localStorage.setItem('user',JSON.stringify(user))\r\n    }\r\n}\r\n\r\nfunction addMove(contact, amount) {\r\n    var user = JSON.parse(localStorage.getItem('user'))\r\n    if(user){\r\n        user.coins -= amount;\r\n        user.moves.unshift({\r\n            to: {\r\n                id: contact._id,\r\n                name: contact.name\r\n            },\r\n            at: Date.now(),\r\n            amount\r\n        })\r\n        localStorage.setItem('user',JSON.stringify( user))\r\n        return Promise.resolve(user)\r\n    }\r\n}","import UserService from '../../services/UserService'\r\n\r\nconst setCurrUser = (user) => {\r\n    return {type: 'SET_CURR_USER', user}\r\n}\r\n\r\nexport const loadCurrUser = () => {\r\n    return async (dispatch) => {\r\n        const user = await UserService.getUser()\r\n        return dispatch(setCurrUser(user))\r\n        \r\n    }\r\n}\r\n\r\nconst setMove = (user) => {\r\n    return {type: 'SET_MOVE', user}\r\n}\r\nexport const addMove = (contact,amount) => {\r\n    return async (dispatch) => {\r\n        const user = await UserService.addMove(contact,amount)\r\n        console.log(user,'inactions');\r\n        return dispatch(setMove(user))\r\n    }\r\n}","import React from 'react';\r\nimport '../style/global.scss'\r\nimport moveImg from '../assets/moves.png'\r\n\r\nexport default function MoveList(props) {\r\n    const user = props.user\r\n    console.log(user);\r\n    return (<>\r\n        <div className=\"move-list-container\">\r\n            {!user.moves.length && <h1>No Transfers yet</h1>}\r\n\r\n            {user.moves.length && <div className=\"moves\">\r\n                <h1>Your Transfers</h1>\r\n                {user.moves.map(move => <div className=\"trans\" key={move.at}>\r\n                    <h2>To {move.to.name}</h2>\r\n                    <h3> &#8383;{move.amount}</h3>\r\n                    <h3>status: <span>Approve</span></h3>\r\n                    <h4>{new Date(move.at).toLocaleString()}</h4>\r\n                </div>)\r\n                }\r\n            </div>}\r\n                <img src={moveImg} alt=\"\" />\r\n        </div>\r\n    </>)\r\n}\r\n\r\n","import React from 'react';\r\nimport '../style/global.scss'\r\nimport coinsImg from '../assets/coins.png'\r\nimport bitcoin from '../assets/bitcoin.png'\r\nimport {connect} from 'react-redux';\r\nimport {loadRate} from '../stores/bitCoin/actions'\r\nimport {loadCurrUser} from '../stores/user/actions'\r\nimport MoveList from '../components/MoveList'\r\n\r\nclass HomePage extends React.Component {\r\n    async componentDidMount() {\r\n       await  this.props.loadCurrUser()\r\n        this.props.loadRate()\r\n    }\r\n    render() {\r\n        const { currUser,rate } = this.props\r\n        return <>\r\n        <div className=\"hero\">\r\n            <div className=\"hero-txt\">\r\n                <h2><span>New</span> Currency - <br />New <span>Lifestyle!</span></h2>\r\n            </div>\r\n            </div>\r\n            {currUser && <section className=\"user-details-home\">\r\n            <h1>Welcome {currUser.name}!</h1>\r\n            <div className=\"user-info-imgs\">\r\n                <div className=\"coins-img\">\r\n                    <img src={coinsImg} alt=\"\" />\r\n                    <h2>Coins</h2>\r\n                    <h3>{currUser.coins}</h3>\r\n                </div>\r\n                <div className=\"coins-img\" >\r\n                    <img src={bitcoin} alt=\"\" />\r\n                    <h2>BTC</h2>\r\n                    <h3>{rate}</h3>\r\n                </div>\r\n            </div>\r\n            <MoveList user={currUser}/>\r\n        </section>}\r\n       </>\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currUser : state.user.currUser,\r\n        rate : state.bitCoin.rate\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadRate,\r\n    loadCurrUser,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(HomePage)","import React from 'react';\r\nimport '../style/global.scss'\r\n\r\nexport class ContactPreview extends React.Component {\r\n\r\n    render() {\r\n        const { contact } = this.props\r\n        return (\r\n            contact && <div className=\"contact-preview\">\r\n                <div>\r\n                <img src={`https://robohash.org/${contact._id}?set=set5`} alt=\"profile\"/>\r\n                </div>\r\n                <h1>{contact.name}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport '../style/global.scss';\r\nimport {Link} from 'react-router-dom'\r\nimport {ContactPreview} from './ContactPreview'\r\n\r\nexport class ContactList extends React.Component {\r\n    render() {\r\n        const { contacts } = this.props\r\n        return (\r\n            contacts && <section className=\"contacts-list\">\r\n                \r\n                {  \r\n                    contacts.map(contact => <Link to={`/contact/${contact._id}`} key={contact._id}><ContactPreview  contact={contact} ></ContactPreview></Link>)\r\n                }\r\n            </section>\r\n        )\r\n    }\r\n}","import Axios from \"axios\";\r\n\r\nexport default {\r\n    getContacts,\r\n    getContactById,\r\n    deleteContact,\r\n    saveContact,\r\n    getEmptyContact,\r\n    getImgUrl,\r\n}\r\n\r\n\r\n\r\nconst contacts = [\r\n    {\r\n        \"_id\": \"5a56640269f443a5d64b32ca\",\r\n        \"name\": \"Ochoa Hyde\",\r\n        \"email\": \"ochoahyde@renovize.com\",\r\n        \"phone\": \"+1 (968) 593-3824\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664025f6ae9aa24a99fde\",\r\n        \"name\": \"Hallie Mclean\",\r\n        \"email\": \"halliemclean@renovize.com\",\r\n        \"phone\": \"+1 (948) 464-2888\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640252d6acddd183d319\",\r\n        \"name\": \"Parsons Norris\",\r\n        \"email\": \"parsonsnorris@renovize.com\",\r\n        \"phone\": \"+1 (958) 502-3495\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402ed1cf349f0b47b4d\",\r\n        \"name\": \"Rachel Lowe\",\r\n        \"email\": \"rachellowe@renovize.com\",\r\n        \"phone\": \"+1 (911) 475-2312\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402abce24c6bfe4699d\",\r\n        \"name\": \"Dominique Soto\",\r\n        \"email\": \"dominiquesoto@renovize.com\",\r\n        \"phone\": \"+1 (807) 551-3258\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402a6499c1d4da9220a\",\r\n        \"name\": \"Shana Pope\",\r\n        \"email\": \"shanapope@renovize.com\",\r\n        \"phone\": \"+1 (970) 527-3082\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402f90ae30e97f990db\",\r\n        \"name\": \"Faulkner Flores\",\r\n        \"email\": \"faulknerflores@renovize.com\",\r\n        \"phone\": \"+1 (952) 501-2678\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664027bae84ef280ffbdf\",\r\n        \"name\": \"Holder Bean\",\r\n        \"email\": \"holderbean@renovize.com\",\r\n        \"phone\": \"+1 (989) 503-2663\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402e3b846c5f6aec652\",\r\n        \"name\": \"Rosanne Shelton\",\r\n        \"email\": \"rosanneshelton@renovize.com\",\r\n        \"phone\": \"+1 (968) 454-3851\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640272c7dcdf59c3d411\",\r\n        \"name\": \"Pamela Nolan\",\r\n        \"email\": \"pamelanolan@renovize.com\",\r\n        \"phone\": \"+1 (986) 545-2166\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664029a8dd82a6178b15f\",\r\n        \"name\": \"Roy Cantu\",\r\n        \"email\": \"roycantu@renovize.com\",\r\n        \"phone\": \"+1 (929) 571-2295\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664028c096d08eeb13a8a\",\r\n        \"name\": \"Ollie Christian\",\r\n        \"email\": \"olliechristian@renovize.com\",\r\n        \"phone\": \"+1 (977) 419-3550\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664026c53582bb9ebe9d1\",\r\n        \"name\": \"Nguyen Walls\",\r\n        \"email\": \"nguyenwalls@renovize.com\",\r\n        \"phone\": \"+1 (963) 471-3181\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640298ab77236845b82b\",\r\n        \"name\": \"Glenna Santana\",\r\n        \"email\": \"glennasantana@renovize.com\",\r\n        \"phone\": \"+1 (860) 467-2376\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640208fba3e8ecb97305\",\r\n        \"name\": \"Malone Clark\",\r\n        \"email\": \"maloneclark@renovize.com\",\r\n        \"phone\": \"+1 (818) 565-2557\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402abb3146207bc4ec5\",\r\n        \"name\": \"Floyd Rutledge\",\r\n        \"email\": \"floydrutledge@renovize.com\",\r\n        \"phone\": \"+1 (807) 597-3629\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640298500fead8cb1ee5\",\r\n        \"name\": \"Grace James\",\r\n        \"email\": \"gracejames@renovize.com\",\r\n        \"phone\": \"+1 (959) 525-2529\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640243427b8f8445231e\",\r\n        \"name\": \"Tanner Gates\",\r\n        \"email\": \"tannergates@renovize.com\",\r\n        \"phone\": \"+1 (978) 591-2291\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664025c3abdad6f5e098c\",\r\n        \"name\": \"Lilly Conner\",\r\n        \"email\": \"lillyconner@renovize.com\",\r\n        \"phone\": \"+1 (842) 587-3812\"\r\n    }\r\n];\r\n\r\n// function saveContactToStorage(contacts){\r\n//     localStorage.setItem('contacts', JSON.stringify(contacts))\r\n\r\n// }\r\n\r\nfunction sort(arr) {\r\n    return arr.sort((a, b) => {\r\n        if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\r\n            return -1;\r\n        }\r\n        if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    })\r\n}\r\n\r\nasync function getImgUrl(){\r\n    const num = Math.random()\r\n  const url =  await Axios.get(`https://robohash.org/${num}?set=set5`)\r\n  return url.config.url\r\n}\r\nfunction getContacts(filterBy = null) {\r\n    return new Promise((resolve, reject) => {\r\n        var contactsToReturn = contacts\r\n        if (filterBy && filterBy.term) {\r\n            contactsToReturn = filter(filterBy.term)\r\n        }\r\n        resolve(sort(contactsToReturn))\r\n    })\r\n}\r\n\r\nfunction getContactById(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const contact = contacts.find(contact => contact._id === id)\r\n        contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\r\n    })\r\n}\r\n\r\nfunction deleteContact(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(contact => contact._id === id)\r\n        if (index !== -1) {\r\n            contacts.splice(index, 1)\r\n        }\r\n        resolve(contacts)\r\n    })\r\n}\r\n\r\nfunction _updateContact(contact) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(c => contact._id === c._id)\r\n        if (index !== -1) {\r\n            contacts[index] = contact\r\n        }\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction _addContact(contact) {\r\n    return new Promise((resolve, reject) => {\r\n        contact._id = _makeId()\r\n        contacts.push(contact)\r\n        resolve(contact)\r\n    })\r\n\r\n}\r\n\r\nfunction saveContact(contact) {\r\n    return contact._id ? _updateContact(contact) : _addContact(contact)\r\n}\r\n\r\nfunction getEmptyContact() {\r\n    return {\r\n        name: '',\r\n        email: '',\r\n        phone: ''\r\n    }\r\n}\r\n\r\nfunction filter(term) {\r\n    term = term.toLocaleLowerCase()\r\n    var currContacts;\r\n    const storageContacts = JSON.parse(localStorage.getItem('contacts'))\r\n    if(storageContacts) currContacts = storageContacts\r\n    else currContacts = contacts\r\n    return currContacts.filter(contact => {\r\n        return contact.name.toLocaleLowerCase().includes(term) ||\r\n            contact.phone.toLocaleLowerCase().includes(term) ||\r\n            contact.email.toLocaleLowerCase().includes(term)\r\n    })\r\n}\r\n\r\n\r\n\r\nfunction _makeId(length = 10) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n}","import ContactService from '../../services/ContactService';\r\n\r\nconst setCurrContact = (contact) => {\r\n    return {type :'SET_CURR_CONTACT', contact}\r\n}\r\nexport const loadCurrContact = (id) => {\r\n    return async (dispatch) => {\r\n        const contact = await ContactService.getContactById(id)\r\n        return dispatch(setCurrContact(contact))\r\n    }\r\n}\r\n\r\nconst setContacts = (contacts) => {\r\n    return {type: 'SET_CONTACTS', contacts}\r\n}\r\n\r\nexport const loadContacts = (filterBy) => {\r\n    return async (dispatch) => {\r\n        const contacts = await ContactService.getContacts(filterBy)\r\n        return dispatch(setContacts(contacts))\r\n    }\r\n}\r\n\r\nconst saveNewContact = (contact) => {\r\n    return {type: 'SAVE_CONTACT', contact}\r\n}\r\nexport const saveContact = (contact) => {\r\n    return async (dispatch) => {\r\n        const newContact = await ContactService.saveContact(contact)\r\n        return dispatch(saveNewContact(newContact))\r\n    }\r\n}","\r\nimport React from 'react';\r\nimport { ContactList } from '../components/ContactList'\r\nimport '../style/global.scss'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { loadContacts } from '../stores/contacts/actions'\r\n\r\nclass ContactPage extends React.Component {\r\n    async componentDidMount() {\r\n        this.props.loadContacts()\r\n    }\r\n    async handleFilter(value) {\r\n        var filterBy = {\r\n            term: value\r\n        }\r\n        this.props.loadContacts(filterBy)\r\n\r\n    }\r\n\r\n    render() {\r\n        const { contacts } = this.props\r\n        return (<>\r\n\r\n            {contacts && <section className=\"list-container\">\r\n                <h1 className=\"list-header\">Contact List</h1>\r\n                <div className=\"filter-add\">\r\n                    <Link className=\"add-btn\" to={'/contact/edit'}>Add contact</Link>\r\n                    <input className=\"filter-input\" placeholder=\"Find contact   &#128270;\" type=\"text\" onChange={(ev) => this.handleFilter(ev.target.value)} />\r\n                </div>\r\n                <ContactList contacts={contacts} />\r\n            </section>}\r\n\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contact.contacts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadContacts\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactPage)","import React from 'react';\r\nimport '../style/global.scss'\r\nimport { Line } from 'react-chartjs-2';\r\nimport { connect } from 'react-redux';\r\nimport { loadMarketPrice, loadTransactions } from '../stores/bitCoin/actions'\r\n\r\n\r\nclass StatisticPage extends React.Component {\r\n    state = {\r\n        priceData: null,\r\n        transData: null\r\n    }\r\n    priceChart = {\r\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n        datasets: [\r\n            {\r\n                label: '',\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                data: []\r\n            }\r\n        ]\r\n    }\r\n    transChart = {\r\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n        datasets: [\r\n            {\r\n                label: '',\r\n                backgroundColor: 'rgba(247, 107, 107, 0.801)',\r\n                data: []\r\n            }\r\n        ]\r\n    }\r\n    async componentDidMount() {\r\n        await this.props.loadMarketPrice()\r\n        await this.props.loadTransactions()\r\n        var transData = this.props.transactions.values.map(value => value)\r\n        this.transChart.datasets[0].data = transData\r\n        var priceData = this.props.marketPrice.values.map(value => value)\r\n        this.priceChart.datasets[0].data = priceData\r\n        this.priceChart.datasets[0].label = this.props.marketPrice.name\r\n        this.transChart.datasets[0].label = this.props.transactions.name\r\n        this.setState({ priceData, transData })\r\n    }\r\n\r\n    render() {\r\n        const { marketPrice, transactions } = this.props\r\n        return (<section className=\"statistic-page\">\r\n            {marketPrice &&\r\n                <Line data={this.priceChart} />\r\n            }\r\n            {transactions &&\r\n                <Line data={this.transChart} />\r\n            }\r\n        </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        marketPrice: state.bitCoin.marketPrice,\r\n        transactions: state.bitCoin.marketPrice\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadTransactions,\r\n    loadMarketPrice\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(StatisticPage)","import React from 'react';\r\nimport '../style/global.scss'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function MainHeader(props) {\r\n    return <div className=\"main-header\">\r\n        <h1 className=\"logo\">MisterBitcoin</h1>\r\n        <div className=\"pages\">\r\n        <Link to={`/`} >Home</Link>\r\n        <Link to={`/contact`} >Contacts</Link>\r\n        <Link to={`/statistic`} >Statistic</Link>\r\n        </div>\r\n    </div>\r\n}","import React from 'react';\r\nimport '../style/global.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { loadCurrContact } from '../stores/contacts/actions'\r\nimport { addMove, loadCurrUser } from '../stores/user/actions';\r\n\r\nclass ContactDetailsPage extends React.Component {\r\n    state = {\r\n        amount: ''\r\n    }\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        this.props.loadCurrContact(id)\r\n    }\r\n    handleMove = (ev) => {\r\n        const amount = ev.target.value\r\n        this.setState({ amount })\r\n    }\r\n    addMove = async () => {\r\n        await this.props.loadCurrUser()\r\n        await this.props.addMove(this.props.contact, +this.state.amount)\r\n    }\r\n    render() {\r\n        const { contact } = this.props\r\n        return (\r\n            contact && <section className=\"contact-details\">\r\n                <img src={`https://robohash.org/${contact._id}?set=set5`} alt=\"profile\" />\r\n                <h1>Name: {contact.name}</h1>\r\n                <h1>Phone: {contact.phone}</h1>\r\n                <h1>Email: {contact.email}</h1>\r\n                <Link to={`/contact/edit/${contact._id}`}>Edit contact</Link>\r\n                <hr/>\r\n                <div className=\"send-coins-container\">\r\n                    <img src=\"https://images.unsplash.com/photo-1558588942-930faae5a389?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80\" alt=\"\"/>\r\n                    <div className=\"send-input\">\r\n                <label htmlFor=\"amount\">Send <span>{contact.name}</span> some coins!</label>\r\n                <input id=\"amount\" placeholder=\"Amount\" onChange={this.handleMove} type=\"text\" />\r\n                <button onClick={this.addMove}>Send</button>\r\n                </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contact: state.contact.currContact,\r\n        currUser: state.contact.currUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadCurrContact,\r\n    addMove,\r\n    loadCurrUser\r\n}\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactDetailsPage)","import React from 'react';\r\nimport '../style/global.scss'\r\nimport { loadCurrContact,saveContact } from '../stores/contacts/actions'\r\nimport {connect} from 'react-redux';\r\n\r\nclass ContactEditPage extends React.Component {\r\n    state = {\r\n        contact: {\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        if (id) {\r\n        await this.props.loadCurrContact(id)\r\n        const {contact} = this.props\r\n         this.setState({contact})\r\n        }\r\n    }\r\n    saveContact = async (ev) => {\r\n        ev.preventDefault()\r\n        await this.props.saveContact(this.state.contact)\r\n        this.props.history.push('/contact')\r\n    }\r\n\r\n    updateContact = (ev, field) => {\r\n        const { value } = ev.target\r\n        this.setState(prevState => {\r\n            return {\r\n                contact: {\r\n                    ...prevState.contact,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { contact } = this.state\r\n        return (<>\r\n           {contact && <section className=\"contact-edit-container\">\r\n            {contact._id && <h1>Edit your profile</h1>}\r\n            {!contact._id && <h1>New Contact</h1>}\r\n                <form onSubmit={this.saveContact}>\r\n                    <label> Name:\r\n                    <input value={contact.name} onChange={(ev) => this.updateContact(ev, 'name')} type=\"text\" />\r\n                    </label>\r\n                    <label> Phone:\r\n                    <input value={contact.phone} onChange={(ev) => this.updateContact(ev, 'phone')} type=\"text\"/>\r\n                    </label>\r\n                    <label> Email:\r\n                    <input value={contact.email} onChange={(ev) => this.updateContact(ev,'email')} type=\"email\"/>\r\n                    </label>\r\n                    <button>\r\n                        Save Contact\r\n                    </button>\r\n                </form>\r\n\r\n            </section>}\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contact : state.contact.currContact,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadCurrContact,\r\n    saveContact,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactEditPage)","import React from 'react';\nimport './style/global.scss';\nimport  HomePage  from './pages/HomePage'\nimport  ContactPage  from './pages/ContactPage'\nimport StatisticPage  from './pages/StatisticPage'\nimport { Route, Switch } from 'react-router-dom'\nimport MainHeader from './components/MainHeader'\nimport ContactDetailsPage from './pages/ContactDetailsPage';\nimport ContactEditPage from './pages/ContactEditPage';\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <section className=\"main-app\">\n        <MainHeader />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/contact/\" component={ContactPage} />\n          <Route exact path=\"/contact/edit/:id?\" component={ContactEditPage} />\n          <Route exact path=\"/contact/:id\" component={ContactDetailsPage} />\n          <Route exact path=\"/statistic\" component={StatisticPage} />\n        </Switch>\n        <footer className=\"footer\">\n          <h1 className=\"logo\">MisterBitcoin</h1>\n          <p>&#xa9; Dror Uzi</p>\n        </footer>\n      </section>\n    )\n  }\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const INITIAL_STATE = {\r\n    rate: null,\r\n    marketPrice: null,\r\n    transactions:null\r\n}\r\n\r\nexport default function bitCoinReducer(state = INITIAL_STATE,action){\r\n    switch (action.type){\r\n        case 'SET_RATE':\r\n            return {\r\n                ...state,\r\n                rate: action.rate\r\n            }\r\n        case 'SET_MARKET_PRICE':\r\n            return {\r\n                ...state,\r\n                marketPrice: action.marketPrice\r\n            }\r\n        case 'SET_TRANSACTIONS':\r\n            return {\r\n                ...state,\r\n                transactions: action.transactions\r\n            }\r\n        default: \r\n        return state\r\n    }\r\n}","const INITIAL_STATE = {\r\n    currContact: null,\r\n    contacts: []\r\n}\r\n\r\nexport default function contactReducer (state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'SET_CURR_CONTACT':\r\n            return {\r\n                ...state,\r\n                currContact : action.contact\r\n            }\r\n        case 'SET_CONTACTS':\r\n            return {\r\n                ...state,\r\n                contacts : action.contacts\r\n            }\r\n        case ' SAVE_CONTACT': \r\n        const idx = state.contacts.findIndex(currContact => currContact._id === action.contact._id)\r\n        return {\r\n            ...state,\r\n            contacts : [\r\n                ...state.contacts.splice(idx, 1, action.contact)\r\n            ]\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","const INITIAL_STATE = {\r\n    currUser: null\r\n}\r\n\r\n\r\nexport default function userReducer(state = INITIAL_STATE, action) {\r\n    switch(action.type) {\r\n        case 'SET_CURR_USER':\r\n            return {\r\n                ...state,\r\n                currUser: action.user\r\n            }\r\n        case 'SET_MOVE':\r\n            return {\r\n                ...state,\r\n                currUser : action.user\r\n                \r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport bitCoinReducer from './bitCoin/reducers'\r\nimport contactReducer from './contacts/reducers'\r\nimport userReducer from './user/reducers'\r\n\r\nconst rootReducer = combineReducers({\r\n    contact: contactReducer,\r\n    user: userReducer,\r\n    bitCoin : bitCoinReducer\r\n})\r\n\r\n\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n)\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/global.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './stores/store';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\nconst history = createBrowserHistory()\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={history}>\n            <App />\n        </Router>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n// window.addEventListener('beforeinstallprompt', (e) => {\n//     console.log('beforeinstallprompt event has fired')\n//     e.prompt()\n// });","module.exports = __webpack_public_path__ + \"static/media/coins.bd8997ff.png\";","module.exports = __webpack_public_path__ + \"static/media/bitcoin.d331535d.png\";","module.exports = __webpack_public_path__ + \"static/media/moves.977b3fef.png\";"],"sourceRoot":""}