{"version":3,"sources":["services/UserService.js","services/BitcoinService.js","pages/HomePage.js","components/ContactPreview.js","components/ContactList.js","services/ContactService.js","pages/ContactPage.js","pages/StatisticPage.js","components/MainHeader.js","pages/ContactDetailsPage.js","pages/ContactEditPage.js","App.js","serviceWorker.js","index.js","assets/coins.png","assets/bitcoin.png"],"names":["getUser","name","coins","moves","getRate","a","async","axios","get","rate","data","getMarketPrice","priceChart","getConfirmedTransactions","transChart","HomePage","state","user","UserService","this","setState","BitcoinService","className","src","coinsImg","alt","bitcoin","React","Component","ContactPreview","contact","props","_id","ContactList","contacts","map","to","key","getContacts","filterBy","Promise","resolve","reject","contactsToReturn","term","currContacts","toLocaleLowerCase","storageContacts","JSON","parse","localStorage","getItem","filter","includes","phone","email","sort","b","getContactById","id","find","deleteContact","index","findIndex","splice","saveContact","c","_updateContact","length","txt","possible","i","charAt","Math","floor","random","_makeId","push","_addContact","getEmptyContact","getImgUrl","num","Axios","url","config","ContactPage","contactId","ContactService","value","placeholder","type","onChange","ev","handleFilter","target","StatisticPage","priceChartData","transChartData","labels","datasets","label","backgroundColor","values","MainHeader","ContactDetailsPage","match","params","preventDefault","history","updateContact","field","prevState","onSubmit","App","exact","path","component","ContactEditPage","Boolean","window","location","hostname","createBrowserHistory","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.b3de3a12.chunk.js","sourcesContent":["\r\nexport default {\r\n    getUser\r\n}\r\n\r\n\r\nfunction getUser() {\r\n    return {\r\n        name: \"Ochoa Hyde\",\r\n        coins: 100,\r\n        moves: []\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport default {\r\n    getRate,\r\n    getMarketPrice,\r\n    getConfirmedTransactions\r\n}\r\n\r\nasync function getMarketPrice(){\r\n\r\n    const priceChart = await axios.get('https://api.blockchain.info/charts/market-price?timespan=1months&format=json&cors=true')\r\n    return priceChart.data\r\n}\r\n\r\nasync function getConfirmedTransactions(){\r\n    const transChart = await axios.get('https://api.blockchain.info/charts/median-confirmation-time?timespan=1months&format=json&cors=true')\r\n    return transChart\r\n}\r\nasync function getRate(coins){\r\n   const rate = await axios.get(`https://blockchain.info/tobtc?currency=USD&value=${coins}`);\r\n   return rate.data;\r\n}","import React from 'react';\r\nimport UserService from '../services/UserService';\r\nimport BitcoinService from '../services/BitcoinService';\r\nimport '../style/global.scss'\r\nimport coinsImg from '../assets/coins.png'\r\nimport bitcoin from '../assets/bitcoin.png'\r\n\r\nexport default class HomePage extends React.Component {\r\n    state = {\r\n        user: null,\r\n        coins: null\r\n    }\r\n    async componentDidMount() {\r\n        const user = UserService.getUser();\r\n        this.setState({ user })\r\n        const coins = await BitcoinService.getRate(user.coins)\r\n        this.setState({ coins })\r\n    }\r\n    render() {\r\n        const { user } = this.state\r\n        const { coins } = this.state\r\n        return <>\r\n        <div className=\"hero\">\r\n            <div className=\"hero-txt\">\r\n                <h2><span>New</span> Currency - <br />New <span>Lifestyle!</span></h2>\r\n            </div>\r\n            </div>\r\n            {user && <section className=\"user-details-home\">\r\n            <h1>Welcome {user.name}!</h1>\r\n            <div className=\"user-info-imgs\">\r\n                <div className=\"coins-img\">\r\n                    <img src={coinsImg} alt=\"bitcoin\" />\r\n                    <h2>Coins</h2>\r\n                    <h3>{user.coins}</h3>\r\n                </div>\r\n                <div className=\"coins-img\" alt=\"coins\">\r\n                    <img src={bitcoin} />\r\n                    <h2>BTC</h2>\r\n                    <h3>{coins}</h3>\r\n                </div>\r\n            </div>\r\n        </section>}\r\n       </>\r\n    }\r\n}","import React from 'react';\r\nimport '../style/global.scss'\r\n\r\nexport class ContactPreview extends React.Component {\r\n\r\n    render() {\r\n        const { contact } = this.props\r\n        return (\r\n            contact && <div className=\"contact-preview\">\r\n                <div>\r\n                <img src={`https://robohash.org/${contact._id}?set=set5`} alt=\"profile\"/>\r\n                </div>\r\n                <h1>{contact.name}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport '../style/global.scss';\r\nimport {Link} from 'react-router-dom'\r\nimport {ContactPreview} from './ContactPreview'\r\n\r\nexport class ContactList extends React.Component {\r\n    render() {\r\n        const { contacts } = this.props\r\n        return (\r\n            contacts && <section className=\"contacts-list\">\r\n                \r\n                {  \r\n                    contacts.map(contact => <Link to={`/contact/${contact._id}`} key={contact._id}><ContactPreview  contact={contact} ></ContactPreview></Link>)\r\n                }\r\n            </section>\r\n        )\r\n    }\r\n}","import Axios from \"axios\";\r\n\r\nexport default {\r\n    getContacts,\r\n    getContactById,\r\n    deleteContact,\r\n    saveContact,\r\n    getEmptyContact,\r\n    getImgUrl,\r\n}\r\n\r\n\r\n\r\nconst contacts = [\r\n    {\r\n        \"_id\": \"5a56640269f443a5d64b32ca\",\r\n        \"name\": \"Ochoa Hyde\",\r\n        \"email\": \"ochoahyde@renovize.com\",\r\n        \"phone\": \"+1 (968) 593-3824\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664025f6ae9aa24a99fde\",\r\n        \"name\": \"Hallie Mclean\",\r\n        \"email\": \"halliemclean@renovize.com\",\r\n        \"phone\": \"+1 (948) 464-2888\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640252d6acddd183d319\",\r\n        \"name\": \"Parsons Norris\",\r\n        \"email\": \"parsonsnorris@renovize.com\",\r\n        \"phone\": \"+1 (958) 502-3495\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402ed1cf349f0b47b4d\",\r\n        \"name\": \"Rachel Lowe\",\r\n        \"email\": \"rachellowe@renovize.com\",\r\n        \"phone\": \"+1 (911) 475-2312\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402abce24c6bfe4699d\",\r\n        \"name\": \"Dominique Soto\",\r\n        \"email\": \"dominiquesoto@renovize.com\",\r\n        \"phone\": \"+1 (807) 551-3258\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402a6499c1d4da9220a\",\r\n        \"name\": \"Shana Pope\",\r\n        \"email\": \"shanapope@renovize.com\",\r\n        \"phone\": \"+1 (970) 527-3082\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402f90ae30e97f990db\",\r\n        \"name\": \"Faulkner Flores\",\r\n        \"email\": \"faulknerflores@renovize.com\",\r\n        \"phone\": \"+1 (952) 501-2678\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664027bae84ef280ffbdf\",\r\n        \"name\": \"Holder Bean\",\r\n        \"email\": \"holderbean@renovize.com\",\r\n        \"phone\": \"+1 (989) 503-2663\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402e3b846c5f6aec652\",\r\n        \"name\": \"Rosanne Shelton\",\r\n        \"email\": \"rosanneshelton@renovize.com\",\r\n        \"phone\": \"+1 (968) 454-3851\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640272c7dcdf59c3d411\",\r\n        \"name\": \"Pamela Nolan\",\r\n        \"email\": \"pamelanolan@renovize.com\",\r\n        \"phone\": \"+1 (986) 545-2166\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664029a8dd82a6178b15f\",\r\n        \"name\": \"Roy Cantu\",\r\n        \"email\": \"roycantu@renovize.com\",\r\n        \"phone\": \"+1 (929) 571-2295\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664028c096d08eeb13a8a\",\r\n        \"name\": \"Ollie Christian\",\r\n        \"email\": \"olliechristian@renovize.com\",\r\n        \"phone\": \"+1 (977) 419-3550\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664026c53582bb9ebe9d1\",\r\n        \"name\": \"Nguyen Walls\",\r\n        \"email\": \"nguyenwalls@renovize.com\",\r\n        \"phone\": \"+1 (963) 471-3181\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640298ab77236845b82b\",\r\n        \"name\": \"Glenna Santana\",\r\n        \"email\": \"glennasantana@renovize.com\",\r\n        \"phone\": \"+1 (860) 467-2376\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640208fba3e8ecb97305\",\r\n        \"name\": \"Malone Clark\",\r\n        \"email\": \"maloneclark@renovize.com\",\r\n        \"phone\": \"+1 (818) 565-2557\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402abb3146207bc4ec5\",\r\n        \"name\": \"Floyd Rutledge\",\r\n        \"email\": \"floydrutledge@renovize.com\",\r\n        \"phone\": \"+1 (807) 597-3629\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640298500fead8cb1ee5\",\r\n        \"name\": \"Grace James\",\r\n        \"email\": \"gracejames@renovize.com\",\r\n        \"phone\": \"+1 (959) 525-2529\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640243427b8f8445231e\",\r\n        \"name\": \"Tanner Gates\",\r\n        \"email\": \"tannergates@renovize.com\",\r\n        \"phone\": \"+1 (978) 591-2291\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664025c3abdad6f5e098c\",\r\n        \"name\": \"Lilly Conner\",\r\n        \"email\": \"lillyconner@renovize.com\",\r\n        \"phone\": \"+1 (842) 587-3812\"\r\n    }\r\n];\r\n\r\n// function saveContactToStorage(contacts){\r\n//     localStorage.setItem('contacts', JSON.stringify(contacts))\r\n\r\n// }\r\n\r\nfunction sort(arr) {\r\n    return arr.sort((a, b) => {\r\n        if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\r\n            return -1;\r\n        }\r\n        if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    })\r\n}\r\n\r\nasync function getImgUrl(){\r\n    const num = Math.random()\r\n  const url =  await Axios.get(`https://robohash.org/${num}?set=set5`)\r\n  return url.config.url\r\n}\r\nfunction getContacts(filterBy = null) {\r\n    return new Promise((resolve, reject) => {\r\n        var contactsToReturn = contacts\r\n        if (filterBy && filterBy.term) {\r\n            contactsToReturn = filter(filterBy.term)\r\n        }\r\n        resolve(sort(contactsToReturn))\r\n    })\r\n}\r\n\r\nfunction getContactById(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const contact = contacts.find(contact => contact._id === id)\r\n        contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\r\n    })\r\n}\r\n\r\nfunction deleteContact(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(contact => contact._id === id)\r\n        if (index !== -1) {\r\n            contacts.splice(index, 1)\r\n        }\r\n        resolve(contacts)\r\n    })\r\n}\r\n\r\nfunction _updateContact(contact) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(c => contact._id === c._id)\r\n        if (index !== -1) {\r\n            contacts[index] = contact\r\n        }\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction _addContact(contact) {\r\n    return new Promise((resolve, reject) => {\r\n        contact._id = _makeId()\r\n        contacts.push(contact)\r\n        resolve(contact)\r\n    })\r\n\r\n}\r\n\r\nfunction saveContact(contact) {\r\n    return contact._id ? _updateContact(contact) : _addContact(contact)\r\n}\r\n\r\nfunction getEmptyContact() {\r\n    return {\r\n        name: '',\r\n        email: '',\r\n        phone: ''\r\n    }\r\n}\r\n\r\nfunction filter(term) {\r\n    term = term.toLocaleLowerCase()\r\n    var currContacts;\r\n    const storageContacts = JSON.parse(localStorage.getItem('contacts'))\r\n    if(storageContacts) currContacts = storageContacts\r\n    else currContacts = contacts\r\n    return currContacts.filter(contact => {\r\n        return contact.name.toLocaleLowerCase().includes(term) ||\r\n            contact.phone.toLocaleLowerCase().includes(term) ||\r\n            contact.email.toLocaleLowerCase().includes(term)\r\n    })\r\n}\r\n\r\n\r\n\r\nfunction _makeId(length = 10) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n}","\r\nimport React from 'react';\r\nimport { ContactList } from '../components/ContactList'\r\nimport ContactService from '../services/ContactService';\r\nimport '../style/global.scss'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class ContactPage extends React.Component {\r\n    state = {\r\n        contacts: null,\r\n        contactId: null\r\n    }\r\n    async componentDidMount() {\r\n        const contacts = await ContactService.getContacts();\r\n        this.setState({ contacts })\r\n    }\r\n    async handleFilter(value) {\r\n        var filterBy = {\r\n            term: value\r\n        }\r\n        const contacts = await ContactService.getContacts(filterBy)\r\n        this.setState({ contacts })\r\n    }\r\n\r\n    render() {\r\n        const { contacts } = this.state\r\n        return (<>\r\n\r\n            {contacts && <section className=\"list-container\">\r\n                <h1 className=\"list-header\">Contact List</h1>\r\n            <div className=\"filter-add\">\r\n                <Link className=\"add-btn\" to={'/contact/edit'}>Add contact</Link>\r\n                <input className=\"filter-input\" placeholder=\"Find contact   &#128270;\" type=\"text\" onChange={(ev) => this.handleFilter(ev.target.value)} />\r\n                </div>\r\n                <ContactList contacts={contacts} />\r\n            </section>}\r\n\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport '../style/global.scss'\r\nimport BitcoinService from '../services/BitcoinService'\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\nexport default class StatisticPage extends React.Component {\r\n    state = {\r\n        priceChartData: null,\r\n        transChartData: null,\r\n        \r\n    }\r\n    priceChart = {\r\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n        datasets: [\r\n            {\r\n                label: '',\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                data: []\r\n            }\r\n        ]\r\n    }\r\n    transChart = {\r\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n        datasets: [\r\n            {\r\n                label: '',\r\n                backgroundColor: 'rgba(247, 107, 107, 0.801)',\r\n                data: []\r\n            }\r\n        ]\r\n    }\r\n    async componentDidMount() {\r\n        const priceChart = await BitcoinService.getMarketPrice()\r\n        const transChart = await BitcoinService.getConfirmedTransactions()\r\n        var priceChartData = priceChart.values.map(value => value)\r\n        this.priceChart.datasets[0].data = priceChartData\r\n        this.priceChart.datasets[0].label = priceChart.name\r\n        var transChartData = transChart.data.values.map(value => value)\r\n        this.transChart.datasets[0].data = transChartData\r\n        this.transChart.datasets[0].label = transChart.data.name\r\n        this.setState({ priceChartData, transChartData })\r\n    }\r\n\r\n    render() {\r\n        const { priceChartData, transChartData } = this.state\r\n        return (<section className=\"statistic-page\">\r\n            {priceChartData &&\r\n                <Line data={this.priceChart} />\r\n            }\r\n            {transChartData &&\r\n                <Line data={this.transChart} />\r\n            }\r\n        </section>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport '../style/global.scss'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function MainHeader(props) {\r\n    return <div className=\"main-header\">\r\n        <h1 className=\"logo\">MisterBitcoin</h1>\r\n        <div className=\"pages\">\r\n        <Link to={`/`} >Home</Link>\r\n        <Link to={`/contact`} >Contacts</Link>\r\n        <Link to={`/statistic`} >Statistic</Link>\r\n        </div>\r\n    </div>\r\n}","import React from 'react';\r\nimport '../style/global.scss'\r\nimport ContactService from '../services/ContactService'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport class ContactDetailsPage extends React.Component {\r\n    state = {\r\n        contact:null\r\n    }\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        const contact = await ContactService.getContactById(id);\r\n        this.setState({ contact })\r\n    }\r\n\r\n    render() {\r\n        const { contact } = this.state\r\n        return (\r\n            contact && <section className=\"contact-details\">\r\n                <img src={`https://robohash.org/${contact._id}?set=set5`} alt=\"profile\"/>\r\n                <h1>Name: {contact.name}</h1>\r\n                <h1>Phone: {contact.phone}</h1>\r\n                <h1>Email: {contact.email}</h1>\r\n                <Link to={`/contact/edit/${contact._id}`}>Edit profile</Link>\r\n            </section>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport '../style/global.scss'\r\nimport ContactService from '../services/ContactService'\r\n\r\nexport default class ContactDetailsPage extends React.Component {\r\n    state = {\r\n        contact: {\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        if (id) {\r\n            const contact = await ContactService.getContactById(id);\r\n            this.setState({ contact })\r\n        }\r\n    }\r\n    saveContact = async (ev) => {\r\n        ev.preventDefault()\r\n        await ContactService.saveContact(this.state.contact)\r\n        this.props.history.push('/contact')\r\n    }\r\n\r\n    updateContact = (ev, field) => {\r\n        const { value } = ev.target\r\n        this.setState(prevState => {\r\n            return {\r\n                contact: {\r\n                    ...prevState.contact,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const { contact } = this.state\r\n        return (<>\r\n            <section className=\"contact-edit-container\">\r\n            {contact._id && <h1>Edit your profile</h1>}\r\n            {!contact._id && <h1>New Contact</h1>}\r\n                <form onSubmit={this.saveContact}>\r\n                    <label> Name:\r\n                    <input value={contact.name} onChange={(ev) => this.updateContact(ev, 'name')} type=\"text\" />\r\n                    </label>\r\n                    <label> Phone:\r\n                    <input value={contact.phone} onChange={(ev) => this.updateContact(ev, 'phone')} type=\"text\"/>\r\n                    </label>\r\n                    <label> Email:\r\n                    <input value={contact.email} onChange={(ev) => this.updateContact(ev,'email')} type=\"email\"/>\r\n                    </label>\r\n                    <button>\r\n                        Save Contact\r\n                    </button>\r\n                </form>\r\n            </section>\r\n        </>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport './style/global.scss';\nimport  HomePage  from './pages/HomePage'\nimport  ContactPage  from './pages/ContactPage'\nimport StatisticPage  from './pages/StatisticPage'\nimport { Route, Switch } from 'react-router-dom'\nimport MainHeader from './components/MainHeader'\nimport {ContactDetailsPage} from './pages/ContactDetailsPage';\nimport ContactEditPage from './pages/ContactEditPage';\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <section className=\"main-app\">\n        <MainHeader />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/contact/\" component={ContactPage} />\n          <Route exact path=\"/contact/edit/:id?\" component={ContactEditPage} />\n          <Route exact path=\"/contact/:id\" component={ContactDetailsPage} />\n          <Route exact path=\"/statistic\" component={StatisticPage} />\n        </Switch>\n        <footer className=\"footer\">\n          <h1 className=\"logo\">MisterBitcoin</h1>\n          <p>&#xa9; Dror Uzi</p>\n        </footer>\n      </section>\n    )\n  }\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/global.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\nconst history = createBrowserHistory()\n\nReactDOM.render(<Router history={history}>\n    <App />\n</Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/coins.bd8997ff.png\";","module.exports = __webpack_public_path__ + \"static/media/bitcoin.d331535d.png\";"],"sourceRoot":""}