{"version":3,"sources":["services/UserService.js","services/BitcoinService.js","stores/bitCoin/actions.js","stores/user/actions.js","pages/HomePage.js","components/ContactPreview.js","components/ContactList.js","services/ContactService.js","stores/contacts/actions.js","pages/ContactPage.js","pages/StatisticPage.js","components/MainHeader.js","pages/ContactDetailsPage.js","pages/ContactEditPage.js","App.js","serviceWorker.js","stores/bitCoin/reducers.js","stores/contacts/reducers.js","stores/user/reducers.js","stores/store.js","index.js","assets/coins.png","assets/bitcoin.png"],"names":["getUser","name","coins","moves","getRate","a","async","axios","get","rate","data","getMarketPrice","priceChart","getConfirmedTransactions","transChart","setRate","type","setMarketPrice","marketPrice","setTransactions","transactions","setCurrUser","user","HomePage","this","props","loadCurrUser","loadRate","currUser","className","src","coinsImg","alt","bitcoin","React","Component","mapDispatchToProps","dispatch","BitcoinService","UserService","console","log","connect","state","bitCoin","ContactPreview","contact","_id","ContactList","contacts","map","to","key","getContacts","filterBy","Promise","resolve","reject","contactsToReturn","term","currContacts","toLocaleLowerCase","storageContacts","JSON","parse","localStorage","getItem","filter","includes","phone","email","sort","b","getContactById","id","find","deleteContact","index","findIndex","splice","saveContact","c","_updateContact","length","txt","possible","i","charAt","Math","floor","random","_makeId","push","_addContact","getEmptyContact","getImgUrl","num","Axios","url","config","setCurrContact","loadCurrContact","ContactService","setContacts","saveNewContact","ContactPage","loadContacts","value","placeholder","onChange","ev","handleFilter","target","StatisticPage","priceData","transData","labels","datasets","label","backgroundColor","loadMarketPrice","loadTransactions","values","setState","MainHeader","ContactDetailsPage","match","params","currContact","ContactEditPage","preventDefault","history","updateContact","field","prevState","onSubmit","newContact","App","exact","path","component","Boolean","window","location","hostname","INITIAL_STATE","rootReducer","combineReducers","action","idx","store","createStore","applyMiddleware","thunk","createBrowserHistory","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.27b44b27.chunk.js","sourcesContent":["\r\nexport default {\r\n    getUser\r\n}\r\n\r\n\r\nfunction getUser() {\r\n    return {\r\n        name: \"Ochoa Hyde\",\r\n        coins: 100,\r\n        moves: []\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport default {\r\n    getRate,\r\n    getMarketPrice,\r\n    getConfirmedTransactions\r\n}\r\n\r\nasync function getMarketPrice(){\r\n\r\n    const priceChart = await axios.get('https://api.blockchain.info/charts/market-price?timespan=1months&format=json&cors=true')\r\n    return priceChart.data\r\n}\r\n\r\nasync function getConfirmedTransactions(){\r\n    const transChart = await axios.get('https://api.blockchain.info/charts/median-confirmation-time?timespan=1months&format=json&cors=true')\r\n    return transChart\r\n}\r\nasync function getRate(){\r\n   const rate = await axios.get(`https://blockchain.info/tobtc?currency=USD&value=1&cors=true`);\r\n   return rate.data;\r\n}","import BitcoinService from '../../services/BitcoinService'\r\n\r\n\r\nconst setRate = (rate) => {\r\n    return {type:'SET_RATE', rate}\r\n}\r\n\r\nexport const loadRate = () => {\r\n    return async (dispatch) => {\r\n        const rate = await BitcoinService.getRate()\r\n        return dispatch(setRate(rate))\r\n    }\r\n}\r\n\r\nconst setMarketPrice = (marketPrice) => {\r\n    return {type: 'SET_MARKET_PRICE', marketPrice}\r\n}\r\nexport const loadMarketPrice = () => {\r\n    return async (dispatch) => {\r\n        const marketPrice = await BitcoinService.getMarketPrice()\r\n        return dispatch(setMarketPrice(marketPrice))\r\n    }\r\n}\r\n\r\nconst setTransactions= (transactions) => {\r\n    return {type : 'SET_TRANSACTIONS',transactions}\r\n}\r\n\r\nexport const loadTransactions = () => {\r\n    return async (dispatch) => {\r\n        const transactions = await BitcoinService.getConfirmedTransactions()\r\n        return dispatch(setTransactions(transactions))\r\n    }\r\n}","import UserService from '../../services/UserService'\r\n\r\nconst setCurrUser = (user) => {\r\n    return {type: 'SET_CURR_USER', user}\r\n}\r\n\r\nexport const loadCurrUser = () => {\r\n    return async (dispatch) => {\r\n        const user = await UserService.getUser()\r\n        console.log(user,'actions');\r\n        return dispatch(setCurrUser(user))\r\n        \r\n    }\r\n}","import React from 'react';\r\nimport UserService from '../services/UserService';\r\nimport '../style/global.scss'\r\nimport coinsImg from '../assets/coins.png'\r\nimport bitcoin from '../assets/bitcoin.png'\r\nimport {connect} from 'react-redux';\r\nimport {loadRate} from '../stores/bitCoin/actions'\r\nimport {loadCurrUser} from '../stores/user/actions'\r\n\r\nclass HomePage extends React.Component {\r\n    async componentDidMount() {\r\n        this.props.loadCurrUser()\r\n        this.props.loadRate()\r\n    }\r\n    render() {\r\n        const { currUser,rate } = this.props\r\n        return <>\r\n        <div className=\"hero\">\r\n            <div className=\"hero-txt\">\r\n                <h2><span>New</span> Currency - <br />New <span>Lifestyle!</span></h2>\r\n            </div>\r\n            </div>\r\n            {currUser && <section className=\"user-details-home\">\r\n            <h1>Welcome {currUser.name}!</h1>\r\n            <div className=\"user-info-imgs\">\r\n                <div className=\"coins-img\">\r\n                    <img src={coinsImg} alt=\"bitcoin\" />\r\n                    <h2>Coins</h2>\r\n                    <h3>{currUser.coins}</h3>\r\n                </div>\r\n                <div className=\"coins-img\" alt=\"coins\">\r\n                    <img src={bitcoin} />\r\n                    <h2>BTC</h2>\r\n                    <h3>{rate}</h3>\r\n                </div>\r\n            </div>\r\n        </section>}\r\n       </>\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currUser : state.user.currUser,\r\n        rate : state.bitCoin.rate\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadRate,\r\n    loadCurrUser\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(HomePage)","import React from 'react';\r\nimport '../style/global.scss'\r\n\r\nexport class ContactPreview extends React.Component {\r\n\r\n    render() {\r\n        const { contact } = this.props\r\n        return (\r\n            contact && <div className=\"contact-preview\">\r\n                <div>\r\n                <img src={`https://robohash.org/${contact._id}?set=set5`} alt=\"profile\"/>\r\n                </div>\r\n                <h1>{contact.name}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport '../style/global.scss';\r\nimport {Link} from 'react-router-dom'\r\nimport {ContactPreview} from './ContactPreview'\r\n\r\nexport class ContactList extends React.Component {\r\n    render() {\r\n        const { contacts } = this.props\r\n        return (\r\n            contacts && <section className=\"contacts-list\">\r\n                \r\n                {  \r\n                    contacts.map(contact => <Link to={`/contact/${contact._id}`} key={contact._id}><ContactPreview  contact={contact} ></ContactPreview></Link>)\r\n                }\r\n            </section>\r\n        )\r\n    }\r\n}","import Axios from \"axios\";\r\n\r\nexport default {\r\n    getContacts,\r\n    getContactById,\r\n    deleteContact,\r\n    saveContact,\r\n    getEmptyContact,\r\n    getImgUrl,\r\n}\r\n\r\n\r\n\r\nconst contacts = [\r\n    {\r\n        \"_id\": \"5a56640269f443a5d64b32ca\",\r\n        \"name\": \"Ochoa Hyde\",\r\n        \"email\": \"ochoahyde@renovize.com\",\r\n        \"phone\": \"+1 (968) 593-3824\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664025f6ae9aa24a99fde\",\r\n        \"name\": \"Hallie Mclean\",\r\n        \"email\": \"halliemclean@renovize.com\",\r\n        \"phone\": \"+1 (948) 464-2888\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640252d6acddd183d319\",\r\n        \"name\": \"Parsons Norris\",\r\n        \"email\": \"parsonsnorris@renovize.com\",\r\n        \"phone\": \"+1 (958) 502-3495\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402ed1cf349f0b47b4d\",\r\n        \"name\": \"Rachel Lowe\",\r\n        \"email\": \"rachellowe@renovize.com\",\r\n        \"phone\": \"+1 (911) 475-2312\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402abce24c6bfe4699d\",\r\n        \"name\": \"Dominique Soto\",\r\n        \"email\": \"dominiquesoto@renovize.com\",\r\n        \"phone\": \"+1 (807) 551-3258\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402a6499c1d4da9220a\",\r\n        \"name\": \"Shana Pope\",\r\n        \"email\": \"shanapope@renovize.com\",\r\n        \"phone\": \"+1 (970) 527-3082\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402f90ae30e97f990db\",\r\n        \"name\": \"Faulkner Flores\",\r\n        \"email\": \"faulknerflores@renovize.com\",\r\n        \"phone\": \"+1 (952) 501-2678\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664027bae84ef280ffbdf\",\r\n        \"name\": \"Holder Bean\",\r\n        \"email\": \"holderbean@renovize.com\",\r\n        \"phone\": \"+1 (989) 503-2663\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402e3b846c5f6aec652\",\r\n        \"name\": \"Rosanne Shelton\",\r\n        \"email\": \"rosanneshelton@renovize.com\",\r\n        \"phone\": \"+1 (968) 454-3851\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640272c7dcdf59c3d411\",\r\n        \"name\": \"Pamela Nolan\",\r\n        \"email\": \"pamelanolan@renovize.com\",\r\n        \"phone\": \"+1 (986) 545-2166\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664029a8dd82a6178b15f\",\r\n        \"name\": \"Roy Cantu\",\r\n        \"email\": \"roycantu@renovize.com\",\r\n        \"phone\": \"+1 (929) 571-2295\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664028c096d08eeb13a8a\",\r\n        \"name\": \"Ollie Christian\",\r\n        \"email\": \"olliechristian@renovize.com\",\r\n        \"phone\": \"+1 (977) 419-3550\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664026c53582bb9ebe9d1\",\r\n        \"name\": \"Nguyen Walls\",\r\n        \"email\": \"nguyenwalls@renovize.com\",\r\n        \"phone\": \"+1 (963) 471-3181\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640298ab77236845b82b\",\r\n        \"name\": \"Glenna Santana\",\r\n        \"email\": \"glennasantana@renovize.com\",\r\n        \"phone\": \"+1 (860) 467-2376\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640208fba3e8ecb97305\",\r\n        \"name\": \"Malone Clark\",\r\n        \"email\": \"maloneclark@renovize.com\",\r\n        \"phone\": \"+1 (818) 565-2557\"\r\n    },\r\n    {\r\n        \"_id\": \"5a566402abb3146207bc4ec5\",\r\n        \"name\": \"Floyd Rutledge\",\r\n        \"email\": \"floydrutledge@renovize.com\",\r\n        \"phone\": \"+1 (807) 597-3629\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640298500fead8cb1ee5\",\r\n        \"name\": \"Grace James\",\r\n        \"email\": \"gracejames@renovize.com\",\r\n        \"phone\": \"+1 (959) 525-2529\"\r\n    },\r\n    {\r\n        \"_id\": \"5a56640243427b8f8445231e\",\r\n        \"name\": \"Tanner Gates\",\r\n        \"email\": \"tannergates@renovize.com\",\r\n        \"phone\": \"+1 (978) 591-2291\"\r\n    },\r\n    {\r\n        \"_id\": \"5a5664025c3abdad6f5e098c\",\r\n        \"name\": \"Lilly Conner\",\r\n        \"email\": \"lillyconner@renovize.com\",\r\n        \"phone\": \"+1 (842) 587-3812\"\r\n    }\r\n];\r\n\r\n// function saveContactToStorage(contacts){\r\n//     localStorage.setItem('contacts', JSON.stringify(contacts))\r\n\r\n// }\r\n\r\nfunction sort(arr) {\r\n    return arr.sort((a, b) => {\r\n        if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\r\n            return -1;\r\n        }\r\n        if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    })\r\n}\r\n\r\nasync function getImgUrl(){\r\n    const num = Math.random()\r\n  const url =  await Axios.get(`https://robohash.org/${num}?set=set5`)\r\n  return url.config.url\r\n}\r\nfunction getContacts(filterBy = null) {\r\n    return new Promise((resolve, reject) => {\r\n        var contactsToReturn = contacts\r\n        if (filterBy && filterBy.term) {\r\n            contactsToReturn = filter(filterBy.term)\r\n        }\r\n        resolve(sort(contactsToReturn))\r\n    })\r\n}\r\n\r\nfunction getContactById(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const contact = contacts.find(contact => contact._id === id)\r\n        contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\r\n    })\r\n}\r\n\r\nfunction deleteContact(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(contact => contact._id === id)\r\n        if (index !== -1) {\r\n            contacts.splice(index, 1)\r\n        }\r\n        resolve(contacts)\r\n    })\r\n}\r\n\r\nfunction _updateContact(contact) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(c => contact._id === c._id)\r\n        if (index !== -1) {\r\n            contacts[index] = contact\r\n        }\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction _addContact(contact) {\r\n    return new Promise((resolve, reject) => {\r\n        contact._id = _makeId()\r\n        contacts.push(contact)\r\n        resolve(contact)\r\n    })\r\n\r\n}\r\n\r\nfunction saveContact(contact) {\r\n    return contact._id ? _updateContact(contact) : _addContact(contact)\r\n}\r\n\r\nfunction getEmptyContact() {\r\n    return {\r\n        name: '',\r\n        email: '',\r\n        phone: ''\r\n    }\r\n}\r\n\r\nfunction filter(term) {\r\n    term = term.toLocaleLowerCase()\r\n    var currContacts;\r\n    const storageContacts = JSON.parse(localStorage.getItem('contacts'))\r\n    if(storageContacts) currContacts = storageContacts\r\n    else currContacts = contacts\r\n    return currContacts.filter(contact => {\r\n        return contact.name.toLocaleLowerCase().includes(term) ||\r\n            contact.phone.toLocaleLowerCase().includes(term) ||\r\n            contact.email.toLocaleLowerCase().includes(term)\r\n    })\r\n}\r\n\r\n\r\n\r\nfunction _makeId(length = 10) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n}","import ContactService from '../../services/ContactService';\r\n\r\nconst setCurrContact = (contact) => {\r\n    return {type :'SET_CURR_CONTACT', contact}\r\n}\r\nexport const loadCurrContact = (id) => {\r\n    return async (dispatch) => {\r\n        const contact = await ContactService.getContactById(id)\r\n        return dispatch(setCurrContact(contact))\r\n    }\r\n}\r\n\r\nconst setContacts = (contacts) => {\r\n    return {type: 'SET_CONTACTS', contacts}\r\n}\r\n\r\nexport const loadContacts = (filterBy) => {\r\n    return async (dispatch) => {\r\n        const contacts = await ContactService.getContacts(filterBy)\r\n        return dispatch(setContacts(contacts))\r\n    }\r\n}\r\n\r\nconst saveNewContact = (contact) => {\r\n    return {type: 'SAVE_CONTACT', contact}\r\n}\r\nexport const saveContact = (contact) => {\r\n    return async (dispatch) => {\r\n        const newContact = await ContactService.saveContact(contact)\r\n        return dispatch(saveNewContact(newContact))\r\n    }\r\n}","\r\nimport React from 'react';\r\nimport { ContactList } from '../components/ContactList'\r\nimport '../style/global.scss'\r\nimport { Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {loadContacts} from '../stores/contacts/actions'\r\n\r\nclass ContactPage extends React.Component {\r\n    async componentDidMount() {\r\n        this.props.loadContacts()\r\n    }\r\n    async handleFilter(value) {\r\n        var filterBy = {\r\n            term: value\r\n        }\r\n        this.props.loadContacts(filterBy)\r\n       \r\n    }\r\n\r\n    render() {\r\n        const { contacts } = this.props\r\n        return (<>\r\n\r\n            {contacts && <section className=\"list-container\">\r\n                <h1 className=\"list-header\">Contact List</h1>\r\n            <div className=\"filter-add\">\r\n                <Link className=\"add-btn\" to={'/contact/edit'}>Add contact</Link>\r\n                <input className=\"filter-input\" placeholder=\"Find contact   &#128270;\" type=\"text\" onChange={(ev) => this.handleFilter(ev.target.value)} />\r\n                </div>\r\n                <ContactList contacts={contacts} />\r\n            </section>}\r\n\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts : state.contact.contacts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadContacts\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactPage)","import React from 'react';\r\nimport '../style/global.scss'\r\nimport BitcoinService from '../services/BitcoinService'\r\nimport { Line } from 'react-chartjs-2';\r\nimport { connect } from 'react-redux';\r\nimport { loadMarketPrice, loadTransactions } from '../stores/bitCoin/actions'\r\n\r\n\r\nclass StatisticPage extends React.Component {\r\n    state = {\r\n        priceData: null,\r\n        transData: null\r\n    }\r\n    priceChart = {\r\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n        datasets: [\r\n            {\r\n                label: '',\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                data: []\r\n            }\r\n        ]\r\n    }\r\n    transChart = {\r\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n        datasets: [\r\n            {\r\n                label: '',\r\n                backgroundColor: 'rgba(247, 107, 107, 0.801)',\r\n                data: []\r\n            }\r\n        ]\r\n    }\r\n    async componentDidMount() {\r\n        await this.props.loadMarketPrice()\r\n        await this.props.loadTransactions()\r\n        var transData = this.props.transactions.values.map(value => value)\r\n        this.transChart.datasets[0].data = transData\r\n        var priceData = this.props.marketPrice.values.map(value => value)\r\n        this.priceChart.datasets[0].data = priceData\r\n        this.priceChart.datasets[0].label = this.props.marketPrice.name\r\n        this.transChart.datasets[0].label = this.props.transactions.name\r\n        this.setState({ priceData, transData })\r\n    }\r\n\r\n    render() {\r\n        const { marketPrice, transactions } = this.props\r\n        return (<section className=\"statistic-page\">\r\n            {marketPrice &&\r\n                <Line data={this.priceChart} />\r\n            }\r\n            {transactions &&\r\n                <Line data={this.transChart} />\r\n            }\r\n        </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        marketPrice: state.bitCoin.marketPrice,\r\n        transactions: state.bitCoin.marketPrice\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadTransactions,\r\n    loadMarketPrice\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(StatisticPage)","import React from 'react';\r\nimport '../style/global.scss'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function MainHeader(props) {\r\n    return <div className=\"main-header\">\r\n        <h1 className=\"logo\">MisterBitcoin</h1>\r\n        <div className=\"pages\">\r\n        <Link to={`/`} >Home</Link>\r\n        <Link to={`/contact`} >Contacts</Link>\r\n        <Link to={`/statistic`} >Statistic</Link>\r\n        </div>\r\n    </div>\r\n}","import React from 'react';\r\nimport '../style/global.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { loadCurrContact } from '../stores/contacts/actions'\r\n\r\nclass ContactDetailsPage extends React.Component {\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        this.props.loadCurrContact(id)\r\n    }\r\n\r\n    render() {\r\n        const { contact } = this.props\r\n        return (\r\n            contact && <section className=\"contact-details\">\r\n                <img src={`https://robohash.org/${contact._id}?set=set5`} alt=\"profile\" />\r\n                <h1>Name: {contact.name}</h1>\r\n                <h1>Phone: {contact.phone}</h1>\r\n                <h1>Email: {contact.email}</h1>\r\n                <Link to={`/contact/edit/${contact._id}`}>Edit profile</Link>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contact: state.contact.currContact\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadCurrContact\r\n}\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n\r\n)(ContactDetailsPage)","import React from 'react';\r\nimport '../style/global.scss'\r\nimport { loadCurrContact,saveContact } from '../stores/contacts/actions'\r\nimport {connect} from 'react-redux';\r\n\r\nclass ContactEditPage extends React.Component {\r\n    state = {\r\n        contact: {\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        if (id) {\r\n        await this.props.loadCurrContact(id)\r\n        const {contact} = this.props\r\n         this.setState({contact})\r\n        }\r\n    }\r\n    saveContact = async (ev) => {\r\n        ev.preventDefault()\r\n        await this.props.saveContact(this.state.contact)\r\n        this.props.history.push('/contact')\r\n    }\r\n\r\n    updateContact = (ev, field) => {\r\n        const { value } = ev.target\r\n        this.setState(prevState => {\r\n            return {\r\n                contact: {\r\n                    ...prevState.contact,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const { contact } = this.state\r\n        return (<>\r\n           {contact && <section className=\"contact-edit-container\">\r\n            {contact._id && <h1>Edit your profile</h1>}\r\n            {!contact._id && <h1>New Contact</h1>}\r\n                <form onSubmit={this.saveContact}>\r\n                    <label> Name:\r\n                    <input value={contact.name} onChange={(ev) => this.updateContact(ev, 'name')} type=\"text\" />\r\n                    </label>\r\n                    <label> Phone:\r\n                    <input value={contact.phone} onChange={(ev) => this.updateContact(ev, 'phone')} type=\"text\"/>\r\n                    </label>\r\n                    <label> Email:\r\n                    <input value={contact.email} onChange={(ev) => this.updateContact(ev,'email')} type=\"email\"/>\r\n                    </label>\r\n                    <button>\r\n                        Save Contact\r\n                    </button>\r\n                </form>\r\n            </section>}\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contact : state.contact.currContact\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadCurrContact,\r\n    saveContact\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactEditPage)","import React from 'react';\nimport './style/global.scss';\nimport  HomePage  from './pages/HomePage'\nimport  ContactPage  from './pages/ContactPage'\nimport StatisticPage  from './pages/StatisticPage'\nimport { Route, Switch } from 'react-router-dom'\nimport MainHeader from './components/MainHeader'\nimport ContactDetailsPage from './pages/ContactDetailsPage';\nimport ContactEditPage from './pages/ContactEditPage';\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <section className=\"main-app\">\n        <MainHeader />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/contact/\" component={ContactPage} />\n          <Route exact path=\"/contact/edit/:id?\" component={ContactEditPage} />\n          <Route exact path=\"/contact/:id\" component={ContactDetailsPage} />\n          <Route exact path=\"/statistic\" component={StatisticPage} />\n        </Switch>\n        <footer className=\"footer\">\n          <h1 className=\"logo\">MisterBitcoin</h1>\n          <p>&#xa9; Dror Uzi</p>\n        </footer>\n      </section>\n    )\n  }\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const INITIAL_STATE = {\r\n    rate: null,\r\n    marketPrice: null,\r\n    transactions:null\r\n}\r\n\r\nexport default function bitCoinReducer(state = INITIAL_STATE,action){\r\n    switch (action.type){\r\n        case 'SET_RATE':\r\n            return {\r\n                ...state,\r\n                rate: action.rate\r\n            }\r\n        case 'SET_MARKET_PRICE':\r\n            return {\r\n                ...state,\r\n                marketPrice: action.marketPrice\r\n            }\r\n        case 'SET_TRANSACTIONS':\r\n            return {\r\n                ...state,\r\n                transactions: action.transactions\r\n            }\r\n        default: \r\n        return state\r\n    }\r\n}","const INITIAL_STATE = {\r\n    currContact: null,\r\n    contacts: []\r\n}\r\n\r\nexport default function contactReducer (state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'SET_CURR_CONTACT':\r\n            return {\r\n                ...state,\r\n                currContact : action.contact\r\n            }\r\n        case 'SET_CONTACTS':\r\n            return {\r\n                ...state,\r\n                contacts : action.contacts\r\n            }\r\n        case ' SAVE_CONTACT': \r\n        const idx = state.contacts.findIndex(currContact => currContact._id === action.contact._id)\r\n        return {\r\n            ...state,\r\n            contacts : [\r\n                ...state.contacts.splice(idx, 1, action.contact)\r\n            ]\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","const INITIAL_STATE = {\r\n    user: null\r\n}\r\n\r\n\r\nexport default function userReducer(state = INITIAL_STATE, action) {\r\n    switch(action.type) {\r\n        case 'SET_CURR_USER':\r\n            return {\r\n                ...state,\r\n                currUser: action.user\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport bitCoinReducer from './bitCoin/reducers'\r\nimport contactReducer from './contacts/reducers'\r\nimport userReducer from './user/reducers'\r\n\r\nconst rootReducer = combineReducers({\r\n    contact: contactReducer,\r\n    user: userReducer,\r\n    bitCoin : bitCoinReducer\r\n})\r\n\r\n\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n)\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/global.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './stores/store';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\nconst history = createBrowserHistory()\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={history}>\n            <App />\n        </Router>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n// window.addEventListener('beforeinstallprompt', (e) => {\n//     console.log('beforeinstallprompt event has fired')\n//     e.prompt()\n// });","module.exports = __webpack_public_path__ + \"static/media/coins.bd8997ff.png\";","module.exports = __webpack_public_path__ + \"static/media/bitcoin.d331535d.png\";"],"sourceRoot":""}